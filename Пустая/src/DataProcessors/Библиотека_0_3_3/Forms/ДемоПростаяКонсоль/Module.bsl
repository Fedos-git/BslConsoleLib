&НаКлиенте
Перем укМонако;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)   
	
	//Если не доступев ВебКит, то в АльтернативноеИмяЭлемента передаем имя Поля текстового документа
	ПараметрыРедактора = Новый Структура("ИмяРеквизита, ИмяЭлемента, АльтернативноеИмяЭлемента, ИспользоватьWebKit", "ТекстРедактора", "ХТМЛРедактор", "ТекстРедактор", ПараметрыФормы.ДоступенWebKit);
	//@skip-check use-non-recommended-method
	укМонако = ПолучитьФорму(ПолучитьПолноеИмяФормы("Монако"), ПараметрыРедактора, ЭтотОбъект);
	укМонако.ПриОткрытии(Отказ);
	
	Если ПараметрыФормы.ДоступенWebKit Тогда //Загрузим после инициализации редактора
	Иначе
		ПрименитьНастройкиРедактора();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	СохраняемыеНастройки = НовыеНастройки();
	
	ИнициализироватьПараметрыФормы();
	
	Если ПараметрыФормы.ДоступенWebKit Тогда
	Иначе
		ИнициализироватьТекстовыйРедактор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	укМонако.ЗакрытьКонсоль();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И ИсточникВыбора.ИмяФормы = ПолучитьПолноеИмяФормы("ФормаНастроек") Тогда
		
		ПрименитьнастройкиРедактора(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Источник = укМонако Тогда
		Если ИмяСобытия = "РедакторТекстаПриИзменении" Тогда
			ТекстПриИзменении();
		ИначеЕсли ИмяСобытия = "ОткрытиеКонструктораЗапросов" Тогда
			ЗаблокироватьФормуДоЗакрытияКонструктора(Истина);
		ИначеЕсли ИмяСобытия = "ЗакрытиеКонструктораЗапросов" Тогда
			ЗаблокироватьФормуДоЗакрытияКонструктора(Ложь); 
		ИначеЕсли ИмяСобытия = "АктивизироватьРедактор" Тогда
			АктивизироватьРедактор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстРедакторПриИзменении(Элемент) 
	
	ТекстПриИзменении(); 
	
КонецПроцедуры

#Область ОбработчикиСобытийПоляРедактора

&НаКлиенте
Процедура ConsoleOnReady(Элемент)
	
	укМонако.ConsoleOnReady();
	ПрименитьНастройкиРедактора();
	
КонецПроцедуры

&НаКлиенте
Процедура ConsoleOnClick(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	укМонако.ConsoleOnClick(Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
	Если ДанныеСобытия.Event.eventData1C <> Неопределено Тогда
		Если ДанныеСобытия.Event.eventData1C.event = "EVENT_CONTENT_CHANGED" Тогда
			Модифицированность = Истина;
			ПараметрыФормы.МодульМодифицирован = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкиКонсоли(Команда)
	
	ОткрытьФорму(ПолучитьПолноеИмяФормы("ФормаНастроек"), СохраняемыеНастройки, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#Область КомандыРедактора

&НаКлиенте
Процедура РедакторПереключитьРежим(Команда)
	
	ПараметрыФормы.РежимЗапроса = Не ПараметрыФормы.РежимЗапроса; 
	укМонако.УстановитьРежимЗапроса(ПараметрыФормы.РежимЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура РедакторМеню(Команда)
	 укМонако.КомандаРедактора("editor.action.quickCommand");
КонецПроцедуры
 
&НаКлиенте
Процедура ЗаменитьВхождения(Команда)
	укМонако.КомандаРедактора("editor.action.changeAll");
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПрограммныйИнтерфейсРедактора

&НаКлиенте
Процедура УстановитьСодержимое(НовыйТекстМодуля)
	
	укМонако.УстановитьСодержимое(НовыйТекстМодуля); 
	
КонецПроцедуры 

&НаКлиенте
Процедура АктивизироватьРедактор()
	
	Если ПараметрыФормы.ДоступенWebKit Тогда
		ТекущийЭлемент = Элементы.ХТМЛРедактор;
	Иначе
		ТекущийЭлемент = Элементы.РедакторТекста;  
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти  
 
#Область УправлениеРедактором

&НаКлиенте
Процедура ЗаблокироватьФормуДоЗакрытияКонструктора(Блокировать)
	
	Элементы.КоманднаяПанельМодуль.Доступность = Не Блокировать;
	
	укМонако.РедакторТолькоПросмотр(Блокировать);
	
КонецПроцедуры  

#КонецОбласти

#Область НастройкиРедактора 

&НаКлиентеНаСервереБезКонтекста
Функция НовыеНастройкиШрифтаРедактора()
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяШрифта");
	Результат.Вставить("РазмерШрифта");
	Результат.Вставить("ТолщинаШрифта");
	Результат.Вставить("ВысотаСтроки");
	Возврат Результат;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция НовыеНастройкиТекущегоМодуля()
	
	Результат = Новый Структура;
	Результат.Вставить("ТекущаяСтрока", "");
	Результат.Вставить("РежимЗапроса", Ложь);
	Возврат Результат;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция НовыеНастройкиРедактора()
	
	Результат = Новый Структура;
	Результат.Вставить("КартаКода", Истина);
	Результат.Вставить("СтрокаСостояния", Истина);
	Результат.Вставить("Тема", "bsl-white");
	Результат.Вставить("Язык", "ru");
	Результат.Вставить("НомераСтрок", Истина);
	Результат.Вставить("ОтображатьПробелы", Ложь);
	Возврат Результат;
	
КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Функция НовыеНастройки() 
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяФайла", "");
	Результат.Вставить("ИмяФайлаШаблонов", "");
	Результат.Вставить("ТекущийМодуль", НовыеНастройкиТекущегоМодуля());
	Результат.Вставить("ШрифтРедактора", НовыеНастройкиШрифтаРедактора());
	Результат.Вставить("НастройкиРедактора", НовыеНастройкиРедактора());
	
	Возврат Результат;
	 
КонецФункции 

&НаКлиенте
Функция НовыеНастройкиЭкспорт() Экспорт
	
	Возврат НовыеНастройки();
	
КонецФункции 

&НаКлиенте
Процедура ПрименитьНастройкиРедактора(ВыбранныеНастройки = Неопределено)
	
	Если ВыбранныеНастройки <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(СохраняемыеНастройки, ВыбранныеНастройки, "ШрифтРедактора, НастройкиРедактора");
		//СохраняемыеНастройки.ШрифтРедактора = ВыбранныеНастройки.ШрифтРедактора;	
	КонецЕсли;
	
	НастройкиРедактора = СохраняемыеНастройки.НастройкиРедактора;
	Если ПараметрыФормы.ДоступенWebKit Тогда
		укМонако.ВидимостьКартыКода(НастройкиРедактора.КартаКода);
		укМонако.ВидимостьСтрокиСостояния(НастройкиРедактора.СтрокаСостояния);
		укМонако.УстановитьТему(НастройкиРедактора.Тема);

		укМонако.ПереключитьЯзык(НастройкиРедактора.Язык);
		укМонако.ВидимостьНомеровСтрок(НастройкиРедактора.НомераСтрок);
		укМонако.ОтображатьПробелы(НастройкиРедактора.ОтображатьПробелы);  
		
	КонецЕсли;
	
	укМонако.УстановитьШрифтРедактора(СохраняемыеНастройки.ШрифтРедактора);
	
КонецПроцедуры 

&НаКлиенте
Функция РежимЗапроса() Экспорт 
	
	Возврат ПараметрыФормы.РежимЗапроса;
	
КонецФункции 

#КонецОбласти

#Область ТекстовыйРедактор

&НаСервере
Процедура ИнициализироватьТекстовыйРедактор() 
	
	Элементы.ХТМЛРедактор.Видимость = Ложь;
	Элементы.РедакторТекста.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПриИзменении()
	
	Модифицированность = Истина;
	ПараметрыФормы.МодульМодифицирован = Истина;
	
КонецПроцедуры 

#КонецОбласти

#Область Сервис

&НаКлиенте
Функция ПолучитьПолноеИмяФормы(НужноеИмяФормы)
	
	ПозицияТочки = СтрНайти(ИмяФормы, ".", НаправлениеПоиска.СКонца);
	Результат = Лев(ИмяФормы, ПозицияТочки) + НужноеИмяФормы;
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВерсияПриложенияСтарше(ТребуемаяВерсия)
	
	СисИнфо = Новый СистемнаяИнформация;
	ВерсияПриложения = СисИнфо.ВерсияПриложения;
	ЧастиТребуемойВерсии = СтрРазделить(ТребуемаяВерсия, ".", Ложь);
	ЧастиВерсииПриложения = СтрРазделить(ВерсияПриложения, ".", Ложь);
	
	Результат = Ложь;
	Для Х = 0 По 3 Цикл
		Если ЧастиВерсииПриложения[Х] <> ЧастиТребуемойВерсии[Х] Тогда
			Результат = Число(ЧастиВерсииПриложения[Х]) > Число(ЧастиТребуемойВерсии[Х]);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции 

&НаСервере
Процедура ИнициализироватьПараметрыФормы()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МодульМодифицирован", Ложь);
	ПараметрыФормы.Вставить("ПараметрыМодифицированы", Ложь);
	ПараметрыФормы.Вставить("РежимЗапроса", Ложь);
	ПараметрыФормы.Вставить("ДоступенWebKit", ВерсияПриложенияСтарше("8.3.14.0"));
	
КонецПроцедуры 

#КонецОбласти 

#КонецОбласти

